# docker-compose.yml
version: '3.8'

services:
  disa_stig_tool:
    build:
      context: ./scripts
      dockerfile: disa_stig_tool.Dockerfile
    ports:
      - "3001:3000"
    volumes:
      - ./artifacts:/app/artifacts
    environment:
      - ARTIFACTS_DIR=/app/artifacts/downloads

  mitre_baseline_tool:
    build:
      context: ./scripts
      dockerfile: mitre_baseline_tool.Dockerfile
    ports:
      - "3002:3000"
    volumes:
      - ./artifacts:/app/artifacts
    environment:
      - ARTIFACTS_DIR=/app/artifacts/downloads
      - GITHUB_TOKEN=${GITHUB_TOKEN} # Inject GitHub token for API calls

  saf_generator_tool:
    build:
      context: .
      dockerfile: tools/saf_generator_tool.Dockerfile
    ports:
      - "3003:3000"
    volumes:
      - ./artifacts:/app/artifacts
    environment:
      - ARTIFACTS_DIR=/app/artifacts/generated
      - NODE_ENV=production
    # Using Node.js environment for SAF CLI
    # SAF CLI is installed via npm: npm install -g @mitre/saf

  inspec_runner_tool:
    build:
      context: .
      dockerfile: tools/inspec_runner_tool.Dockerfile
    ports:
      - "3005:3000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./artifacts:/app/artifacts
    environment:
      - ARTIFACTS_DIR=/app/artifacts/generated
      - CHEF_LICENSE=accept-silent
    # Using official chef/inspec Docker image
    # Makes it easier to execute InSpec profiles
    depends_on:
      - docker_tool

  docker_tool:
    build:
      context: ./scripts
      dockerfile: docker_tool.Dockerfile
    ports:
      - "3004:3000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./artifacts:/app/artifacts
    environment:
      - ARTIFACTS_DIR=/app/artifacts/downloads
    privileged: true # Needed for Docker-in-Docker functionality
  chromadb:
    image: chromadb/chroma
    ports:
      - "8000:8000"
    volumes:
      - ./artifacts/chroma_data:/chroma/chroma # Persists the database on your host machine

  memory-tool:
    build:
      context: .
      dockerfile: ./agents/src/saf_gen/mcp/Dockerfile # Assuming a generic Dockerfile for tools
    ports:
      - "3006:8000" # Expose memory-tool on host port 3006
    environment:
      - CHROMA_HOST=chromadb # The tool will find ChromaDB using its service name
    depends_on:
      - chromadb